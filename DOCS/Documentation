Build Documentation*

.01
Currently the debate is between using session[] variables and utilizing a class to manage the
pause times processing.  The class instance seems to work better than session[] vars.
I am wondering if it would be beneficial to limit the session[] vars to flask related needs 
only and build up the PauseCalc() class (helpers.py) to completely handle all other related 
furnace and logging data into an overall Furnace() class, leaving flask completely for application 
functions alone.
This seems like a more ideal way to manage the data and system overall.

.02
ALT codes for context menu
    ALT 10004 -> heavy checkmark (good )
    ALT 31    -> upside down black triangle (empty)

.03
User, Log, Glass                                                               array of array???
*table LOG -> pk LogID, fk UserID, TimeStamp, Speed, Cols=21, Wagons=31, date, Glass[glass[arr]]
*table USER -> pk UserID, Password, Shift, FurnaceNum
Xtable GLASS -> pk GlassNum, JobNum, ADASmeasurements, Measurements

.04
When user clicks STOP, the final page is presented, BUT the user can change the address in the 
address bar of the browser to a former page (that they should no longer access), and flask gladly
returns the route.
The user should start as the start.html page, work their shift using any page but start.html 
and endofshift.html. When they click STOP, endofshift.html should render and the user should not
be able to visit any page from before.